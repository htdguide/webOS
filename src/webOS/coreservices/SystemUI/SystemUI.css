/* desktop-monitor.css
 *
 * Styles for the desktop “monitor” container. We’ve added CSS variables
 * and made its transform timing match the windows’ slide.
 *
 * Areas:
 * 0: CSS Variables (0.1)
 * 1: Base Monitor Styles (1.1, 1.2)
 * 2: Slide-Out State (2.1, 2.2, 2.3)
 */

/* ================================
   Area 0: CSS Variables
   ================================
   0.1: Shared slide timing & easing
*/
:root {
    --slide-duration: 0.5s;
    --slide-easing: ease-out;
    /* Optional delay for fade-out (if used) */
    --fade-delay: 0.2s;
  }
  
  /* ================================
     Area 1: Base Monitor Styles
     ================================
     1.1: Container dimensions & look
     1.2: Default transform transition
  */
  .desktop-monitor {
    width: 100vw;
    height: 100vh;
    background-color: #2e2e2e;
    position: relative;
    overflow: hidden;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);
    z-index: 1;
    /* sync slide timing with windows */
    transition: transform var(--slide-duration) var(--slide-easing);
  }
  
  /* ================================
     Area 2: Slide-Out State
     ================================
     2.1: Slide monitor off-screen
     2.2: Fade out background
     2.3: Restore inner clicks if needed
  */
  .desktop-monitor.slide-left {
    transform: translateX(-100vw);
    opacity: 0;
    pointer-events: none;
    /* both transform and opacity use the same slide timing */
    transition:
      transform var(--slide-duration) var(--slide-easing),
      opacity   var(--slide-duration) var(--slide-easing) var(--fade-delay);
  }
  
  .desktop-monitor.slide-left * {
    pointer-events: auto;
  }
  