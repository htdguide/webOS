/* src/components/DraggableWindow/DraggableWindow.css */

.draggable-window {
  position: absolute;
  border-radius: 11px;
  overflow: hidden;
  background: rgba(255, 255, 255, 0.8);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
  backdrop-filter: blur(12px);
  z-index: 100;
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  /* no transition here—only fullscreen will animate */
}

/* disable all transitions while dragging */
.draggable-window.no-transition {
  transition: none !important;
}

/* Focused state overrides */
.draggable-window.focused {
  box-shadow: 0 16px 32px rgba(0, 0, 0, 0.3);
}

/* Header */
.window-header {
  position: relative;
  height: 28px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 10px;
  background: rgb(242, 242, 242);
  color: #000;
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  z-index: 110;
}

.draggable-window:not(.focused) .window-header {
  background: rgb(230, 230, 230);
}

.header-left {
  display: flex;
  align-items: center;
  gap: 10px;
}

/* Base styles for both buttons */
.close-button,
.resize-button {
  position: relative;      /* for the ::before pseudo */
  margin-top: 3px;
  width: 11px;
  height: 11px;
  border-radius: 50%;
  border: 1px !important;
  padding: 0;
  margin-left: -2px;
  line-height: 0;
  appearance: none;
  cursor: default;
  z-index: 110;
  background: transparent; /* background comes from focused/unfocused rules below */
}

/* decorative duplicate behind each button */
.close-button::before,
.resize-button::before {
  content: '';
  position: absolute;
  top: -0.5px;    /* 1px above */
  left: -0.5px;   /* 1px left */
  width: calc(100% + 1px);
  height: calc(100% + 1px);
  border-radius: 50%;
  pointer-events: none;  /* unclickable */
  z-index: 100;           /* behind the real button */
}

/* darker “shadow” colors for each pseudo-element -30 for all rgb colors comparing originals*/
.close-button::before {
  background: rgb(225, 65, 60);
}
.resize-button::before {
  background: rgb(50, 170, 35);
}

/* Buttons coloring */
.draggable-window.focused .close-button {
  background: rgb(255, 95, 90);
  border-color: rgb(0, 0, 0);
}
.draggable-window.focused .close-button:hover {
  background: #bf4943;
}
.draggable-window.focused .resize-button {
  background: rgb(80, 200, 65);
}
.draggable-window.focused .resize-button:hover {
  background: #49bf43;
}

/* hover when unfocused */
.draggable-window:not(.focused) .header-left:hover .close-button {
  background: #ff5f5f;
}
.draggable-window:not(.focused) .header-left:hover .close-button:hover {
  background: #bf4943;
}
.draggable-window:not(.focused) .header-left:hover .resize-button {
  background: #5fdd5f;
}
.draggable-window:not(.focused) .header-left:hover .resize-button:hover {
  background: #49bf43;
}

.close-button:focus,
.resize-button:focus {
  outline: none;
}

.header-title {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  font-size: 14px;
  font-weight: bold;
  color: #333;
  pointer-events: none;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 60%;
}

.header-right {
  display: flex;
  align-items: center;
}

/* Content */
.window-content {
  position: relative;
  height: calc(100% - 30px);
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 198;
}

.content-inner {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 100;
}

/* Loading Overlay */
.loading-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 1;
  transition: opacity 1s ease;
  background-color: rgba(0, 0, 0, 0.3);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 199;
}

.loading-overlay.fade-out {
  opacity: 0;
}

.loading-overlay,
.loading-overlay.fade-out {
  pointer-events: none;
}

/* Resize handles */
.resize-handle {
  position: absolute;
  background: transparent;
}
.resize-br,
.resize-tr,
.resize-bl,
.resize-tl {
  width: 15px;
  height: 15px;
  z-index: 199;
}
.resize-br {
  bottom: 0;
  right: 0;
  cursor: nwse-resize;
}
.resize-tr {
  top: 0;
  right: 0;
  cursor: nesw-resize;
}
.resize-bl {
  bottom: 0;
  left: 0;
  cursor: nesw-resize;
}
.resize-tl {
  top: 0;
  left: 0;
  cursor: nwse-resize;
}

.resize-handle:active {
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  bottom: auto;
  right: auto;
}

.resize-top,
.resize-bottom,
.resize-left,
.resize-right {
  z-index: 199;
}
.resize-top {
  top: 0;
  left: 0;
  width: 100%;
  height: 5px;
  cursor: ns-resize;
}
.resize-bottom {
  bottom: 0;
  left: 0;
  width: 100%;
  height: 5px;
  cursor: ns-resize;
}
.resize-left {
  top: 0;
  left: 0;
  width: 5px;
  height: 100%;
  cursor: ew-resize;
}
.resize-right {
  top: 0;
  right: 0;
  width: 5px;
  height: 100%;
  cursor: ew-resize;
}

/* Fullscreen state */
.draggable-window.fullscreen {
  position: flex;
  border-radius: 0;
  border: 0;
  top: 0 !important;
  left: 0 !important;
  width: 100vw !important;
  height: 100vh !important;
  margin: 0;
  transform: none !important;

  transition:
    left 0.4s cubic-bezier(0.215, 0.61, 0.355, 1),
    top 0.4s cubic-bezier(0.215, 0.61, 0.355, 1),
    width 0.4s cubic-bezier(0.215, 0.61, 0.355, 1),
    height 0.4s cubic-bezier(0.215, 0.61, 0.355, 1),
    transform 0.4s cubic-bezier(0.215, 0.61, 0.355, 1);

  z-index: 100;
}
